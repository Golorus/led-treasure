export var isBuzzerHit = false
export var treasurePlace = 0
export var buzzerPosition =0
 var difference = 100 
 var additionalLEDs
var treasureColor = 0.3
export var buzzerV = 0
var duration = 0.5      
export var leaderCount = 0
export var leader = 0
direction = 1
pixels = array(pixelCount)
treasurePlace = ceil(random(pixelCount-2))+1
  speed = 0.2
  
function newGame() {
    ignoreInputs=false
            leader = 2
  buzzerPostition = 0
        leaderCount = 0
        speed = 0.2
  treasurePlace = ceil(random(pixelCount-2))+1
  
}


export function beforeRender(delta) {
  if (buzzerPosition == treasurePlace) {
    ignoreInputs = true
    speed = 0.5
    if (leader > 49.4 && leader < 50) {
      leaderCount = leaderCount +1
      if (leaderCount >=2) {
        pixels[buzzerPosition] = 0 
        
        newGame();
      }
    }
  }
  t1 =time(0.01)
  leader = (leader + direction * speed)
  if (leader >= pixelCount) {
    direction = -direction
  }
  if (leader <=0) {
    direction = -direction
  }
  if (isBuzzerHit && !ignoreInputs) {
    speed = speed +0.05
    if (speed >= 2) { speed = 0.2}
    buzzerV = 1
    buzzerPosition = floor(leader)
    difference = abs(buzzerPosition - treasurePlace)
    additionalLEDs = floor((abs(buzzerPosition - treasurePlace)/(pixelCount/9)))
    if (additionalLEDs <1) {
      if (speed - 0.1 >0.1) {speed = speed -0.1}
    }
  //if(buzzerPosition == treasurePlace) {
  //  treasureColor = 0
  //  direction = 0
  //}
  isBuzzerHit = false
}
buzzerV = buzzerV - (duration/difference)
  for (i=0; i<pixelCount;i++) {
    //if (i == treasurePlace) {
      //pixels[i] =1    }else 
      if(i== buzzerPosition-additionalLEDs && buzzerV > 0) {
      
      if ((buzzerPosition -additionalLEDs)<0) {
        k=0
      }else {k=buzzerPosition}
      if ((buzzerPosition + additionalLEDs)>pixelCount) {
        max = pixelCount;
      }else {max=buzzerPosition+additionalLEDs}
      for (k;k<=max;k++) {
      pixels[k] = buzzerV
      i = i+additionalLEDs*2
      }
    }else if (i == floor(leader) ) {
     
      pixels[i] = 1
}
    else{
    pixels[i] = 0
    }
      
    }
}


export function render(index) {

  if(buzzerPosition == treasurePlace) {
    h=0.3;
    v=wave(t1)
    hsv(h,1,v)
    
  }//else if (index == treasurePlace) {
    //h = treasureColor
    //v = pixels[index]  }
    else if(index >= (buzzerPosition-additionalLEDs) && index <= (buzzerPosition+additionalLEDs) && buzzerV > 0) {
    h = 1
    v = pixels[index]
  }  else{
    h= 0.4
    v = pixels[index]
  }
  
  hsv(h,1,v)
}